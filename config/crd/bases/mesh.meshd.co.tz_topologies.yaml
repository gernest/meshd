
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: topologies.mesh.meshd.co.tz
spec:
  group: mesh.meshd.co.tz
  names:
    kind: Topology
    listKind: TopologyList
    plural: topologies
    singular: topology
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Topology is the Schema for the topologies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TopologySpec holds the graph and represents the different
              paths a request can follow. Each Pods and services are nodes of the
              graph.
            properties:
              pods:
                items:
                  description: Pod is a node of the graph representing a kubernetes
                    pod.
                  properties:
                    containerPorts:
                      items:
                        description: ContainerPort represents a network port in a
                          single container.
                        properties:
                          containerPort:
                            description: Number of port to expose on the pod's IP
                              address. This must be a valid port number, 0 < x < 65536.
                            format: int32
                            type: integer
                          hostIP:
                            description: What host IP to bind the external port to.
                            type: string
                          hostPort:
                            description: Number of port to expose on the host. If
                              specified, this must be a valid port number, 0 < x <
                              65536. If HostNetwork is specified, this must match
                              ContainerPort. Most containers do not need this.
                            format: int32
                            type: integer
                          name:
                            description: If specified, this must be an IANA_SVC_NAME
                              and unique within the pod. Each named port in a pod
                              must have a unique name. Name for the port that can
                              be referred to by services.
                            type: string
                          protocol:
                            default: TCP
                            description: Protocol for port. Must be UDP, TCP, or SCTP.
                              Defaults to "TCP".
                            type: string
                        required:
                        - containerPort
                        type: object
                      type: array
                    destinationOf:
                      items:
                        description: ServiceTrafficTargetKey references a TrafficTarget
                          applied on a Service.
                        properties:
                          service:
                            description: Key references a resource.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          trafficTarget:
                            description: Key references a resource.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        required:
                        - service
                        - trafficTarget
                        type: object
                      type: array
                    ip:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                    ownerReferences:
                      items:
                        description: OwnerReference contains enough information to
                          let you identify an owning object. An owning object must
                          be in the same namespace as the dependent, or be cluster-scoped,
                          so there is no namespace field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          blockOwnerDeletion:
                            description: If true, AND if the owner has the "foregroundDeletion"
                              finalizer, then the owner cannot be deleted from the
                              key-value store until this reference is removed. Defaults
                              to false. To set this field, a user needs "delete" permission
                              of the owner, otherwise 422 (Unprocessable Entity) will
                              be returned.
                            type: boolean
                          controller:
                            description: If true, this reference points to the managing
                              controller.
                            type: boolean
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                            type: string
                        required:
                        - apiVersion
                        - kind
                        - name
                        - uid
                        type: object
                      type: array
                    serviceAccount:
                      type: string
                    sourceOf:
                      items:
                        description: ServiceTrafficTargetKey references a TrafficTarget
                          applied on a Service.
                        properties:
                          service:
                            description: Key references a resource.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          trafficTarget:
                            description: Key references a resource.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        required:
                        - service
                        - trafficTarget
                        type: object
                      type: array
                  required:
                  - ip
                  - name
                  - namespace
                  - serviceAccount
                  type: object
                type: array
              serviceTrafficTargets:
                items:
                  description: ServiceTrafficTarget represents a TrafficTarget applied
                    a on Service. TrafficTargets have a Destination service account.
                    This service account can be set on many pods, each of them, potentially
                    accessible through different services. A ServiceTrafficTarget
                    is a TrafficTarget for a Service which exposes a Pod which has
                    the TrafficTarget Destination service-account.
                  properties:
                    destination:
                      description: ServiceTrafficTargetDestination represents a destination
                        of a ServiceTrafficTarget. In the SMI specification, a TrafficTarget
                        has a destination service-account. ServiceTrafficTargetDestination
                        holds the pods exposed by the Service which has this service-account.
                      properties:
                        namespace:
                          type: string
                        pods:
                          items:
                            description: Key references a resource.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          type: array
                        ports:
                          items:
                            description: ServicePort contains information on service's
                              port.
                            properties:
                              appProtocol:
                                description: The application protocol for this port.
                                  This field follows standard Kubernetes label syntax.
                                  Un-prefixed names are reserved for IANA standard
                                  service names (as per RFC-6335 and http://www.iana.org/assignments/service-names).
                                  Non-standard protocols should use prefixed names
                                  such as mycompany.com/my-custom-protocol. This is
                                  a beta field that is guarded by the ServiceAppProtocol
                                  feature gate and enabled by default.
                                type: string
                              name:
                                description: The name of this port within the service.
                                  This must be a DNS_LABEL. All ports within a ServiceSpec
                                  must have unique names. When considering the endpoints
                                  for a Service, this must match the 'name' field
                                  in the EndpointPort. Optional if only one ServicePort
                                  is defined on this service.
                                type: string
                              nodePort:
                                description: 'The port on each node on which this
                                  service is exposed when type is NodePort or LoadBalancer.  Usually
                                  assigned by the system. If a value is specified,
                                  in-range, and not in use it will be used, otherwise
                                  the operation will fail.  If not specified, a port
                                  will be allocated if this Service requires one.  If
                                  this field is specified when creating a Service
                                  which does not need it, creation will fail. This
                                  field will be wiped when updating a Service to no
                                  longer need it (e.g. changing type from NodePort
                                  to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                format: int32
                                type: integer
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: The IP protocol for this port. Supports
                                  "TCP", "UDP", and "SCTP". Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'Number or name of the port to access
                                  on the pods targeted by the service. Number must
                                  be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named
                                  port in the target Pod''s container ports. If this
                                  is not specified, the value of the ''port'' field
                                  is used (an identity map). This field is ignored
                                  for services with clusterIP=None, and should be
                                  omitted or set equal to the ''port'' field. More
                                  info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          type: array
                        serviceAccount:
                          type: string
                      required:
                      - namespace
                      - serviceAccount
                      type: object
                    errors:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                    namespace:
                      type: string
                    rules:
                      items:
                        description: TrafficSpec represents a Spec which can be used
                          for restricting access to a route in a TrafficTarget or
                          a TrafficSplit.
                        properties:
                          httpRouteGroup:
                            description: HTTPRouteGroup is used to describe HTTP/1
                              and HTTP/2 traffic. It enumerates the routes that can
                              be served by an application.
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                type: string
                              kind:
                                description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              metadata:
                                description: 'Standard object''s metadata. More info:
                                  https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                                type: object
                              spec:
                                description: HTTPRouteGroupSpec is the specification
                                  for a HTTPRouteGroup
                                properties:
                                  matches:
                                    description: Routes for inbound traffic
                                    items:
                                      description: HTTPMatch defines an individual
                                        route for HTTP traffic
                                      properties:
                                        headers:
                                          additionalProperties:
                                            type: string
                                          description: Headers is a list of headers
                                            used to match HTTP traffic
                                          type: object
                                        methods:
                                          description: Methods for inbound traffic
                                            as defined in RFC 7231 https://tools.ietf.org/html/rfc7231#section-4
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: Name is the name of the match
                                            for referencing in a TrafficTarget
                                          type: string
                                        pathRegex:
                                          description: PathRegex is a regular expression
                                            defining the route
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            required:
                            - spec
                            type: object
                          tcpRoute:
                            description: TCPRoute is used to describe TCP inbound
                              connections
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                type: string
                              kind:
                                description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              metadata:
                                description: 'Standard object''s metadata. More info:
                                  https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                                type: object
                              spec:
                                description: TCPRouteSpec is the specification of
                                  a TCPRoute
                                type: object
                            type: object
                        type: object
                      type: array
                    service:
                      description: Key references a resource.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    sources:
                      items:
                        description: ServiceTrafficTargetSource represents a source
                          of a ServiceTrafficTarget. In the SMI specification, a TrafficTarget
                          has a list of sources, each of them being a service-account
                          name. ServiceTrafficTargetSource represents this service-account,
                          populated with the pods having this Service.
                        properties:
                          namespace:
                            type: string
                          pods:
                            items:
                              description: Key references a resource.
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              required:
                              - name
                              - namespace
                              type: object
                            type: array
                          serviceAccount:
                            type: string
                        required:
                        - namespace
                        - serviceAccount
                        type: object
                      type: array
                  required:
                  - destination
                  - errors
                  - name
                  - namespace
                  - service
                  type: object
                type: array
              services:
                items:
                  description: Service is a node of the graph representing a kubernetes
                    service.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      type: object
                    backendOf:
                      description: List of TrafficSplit mentioning this service as
                        a backend.
                      items:
                        description: Key references a resource.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      type: array
                    clusterIp:
                      type: string
                    errors:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                    namespace:
                      type: string
                    pods:
                      items:
                        description: Key references a resource.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      type: array
                    ports:
                      items:
                        description: ServicePort contains information on service's
                          port.
                        properties:
                          appProtocol:
                            description: The application protocol for this port. This
                              field follows standard Kubernetes label syntax. Un-prefixed
                              names are reserved for IANA standard service names (as
                              per RFC-6335 and http://www.iana.org/assignments/service-names).
                              Non-standard protocols should use prefixed names such
                              as mycompany.com/my-custom-protocol. This is a beta
                              field that is guarded by the ServiceAppProtocol feature
                              gate and enabled by default.
                            type: string
                          name:
                            description: The name of this port within the service.
                              This must be a DNS_LABEL. All ports within a ServiceSpec
                              must have unique names. When considering the endpoints
                              for a Service, this must match the 'name' field in the
                              EndpointPort. Optional if only one ServicePort is defined
                              on this service.
                            type: string
                          nodePort:
                            description: 'The port on each node on which this service
                              is exposed when type is NodePort or LoadBalancer.  Usually
                              assigned by the system. If a value is specified, in-range,
                              and not in use it will be used, otherwise the operation
                              will fail.  If not specified, a port will be allocated
                              if this Service requires one.  If this field is specified
                              when creating a Service which does not need it, creation
                              will fail. This field will be wiped when updating a
                              Service to no longer need it (e.g. changing type from
                              NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                            format: int32
                            type: integer
                          port:
                            description: The port that will be exposed by this service.
                            format: int32
                            type: integer
                          protocol:
                            default: TCP
                            description: The IP protocol for this port. Supports "TCP",
                              "UDP", and "SCTP". Default is TCP.
                            type: string
                          targetPort:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Number or name of the port to access on
                              the pods targeted by the service. Number must be in
                              the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              If this is a string, it will be looked up as a named
                              port in the target Pod''s container ports. If this is
                              not specified, the value of the ''port'' field is used
                              (an identity map). This field is ignored for services
                              with clusterIP=None, and should be omitted or set equal
                              to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      type: array
                    selector:
                      additionalProperties:
                        type: string
                      type: object
                    trafficSplits:
                      description: List of TrafficSplits that are targeting this service.
                      items:
                        description: Key references a resource.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      type: array
                    trafficTargets:
                      description: List of TrafficTargets that are targeting pods
                        which are selected by this service.
                      items:
                        description: ServiceTrafficTargetKey references a TrafficTarget
                          applied on a Service.
                        properties:
                          service:
                            description: Key references a resource.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          trafficTarget:
                            description: Key references a resource.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        required:
                        - service
                        - trafficTarget
                        type: object
                      type: array
                  required:
                  - annotations
                  - clusterIp
                  - errors
                  - name
                  - namespace
                  - selector
                  type: object
                type: array
              trafficSplits:
                items:
                  description: TrafficSplit represents a TrafficSplit applied on a
                    Service.
                  properties:
                    backends:
                      items:
                        description: TrafficSplitBackend is a backend of a TrafficSplit.
                        properties:
                          service:
                            description: Key references a resource.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          weight:
                            type: integer
                        required:
                        - service
                        - weight
                        type: object
                      type: array
                    errors:
                      items:
                        type: string
                      type: array
                    incoming:
                      description: List of Pods that are explicitly allowed to pass
                        through the TrafficSplit.
                      items:
                        description: Key references a resource.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      type: array
                    name:
                      type: string
                    namespace:
                      type: string
                    rules:
                      items:
                        description: TrafficSpec represents a Spec which can be used
                          for restricting access to a route in a TrafficTarget or
                          a TrafficSplit.
                        properties:
                          httpRouteGroup:
                            description: HTTPRouteGroup is used to describe HTTP/1
                              and HTTP/2 traffic. It enumerates the routes that can
                              be served by an application.
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                type: string
                              kind:
                                description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              metadata:
                                description: 'Standard object''s metadata. More info:
                                  https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                                type: object
                              spec:
                                description: HTTPRouteGroupSpec is the specification
                                  for a HTTPRouteGroup
                                properties:
                                  matches:
                                    description: Routes for inbound traffic
                                    items:
                                      description: HTTPMatch defines an individual
                                        route for HTTP traffic
                                      properties:
                                        headers:
                                          additionalProperties:
                                            type: string
                                          description: Headers is a list of headers
                                            used to match HTTP traffic
                                          type: object
                                        methods:
                                          description: Methods for inbound traffic
                                            as defined in RFC 7231 https://tools.ietf.org/html/rfc7231#section-4
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: Name is the name of the match
                                            for referencing in a TrafficTarget
                                          type: string
                                        pathRegex:
                                          description: PathRegex is a regular expression
                                            defining the route
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            required:
                            - spec
                            type: object
                          tcpRoute:
                            description: TCPRoute is used to describe TCP inbound
                              connections
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                type: string
                              kind:
                                description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              metadata:
                                description: 'Standard object''s metadata. More info:
                                  https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                                type: object
                              spec:
                                description: TCPRouteSpec is the specification of
                                  a TCPRoute
                                type: object
                            type: object
                        type: object
                      type: array
                    service:
                      description: Key references a resource.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                  required:
                  - errors
                  - name
                  - namespace
                  - service
                  type: object
                type: array
            required:
            - pods
            - serviceTrafficTargets
            - services
            - trafficSplits
            type: object
          status:
            description: TopologyStatus defines the observed state of Topology
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
